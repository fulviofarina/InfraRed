

//#define SEND38 1
//#define RCV38 1

//#define FLUXDBUG 1 //VAL
//#define TAUDBUG 1 // TAU AVG
//#define CRYPTDBUG 1 //Crypto


#include "InfraRedData.h"
#include <IRremoteInt.h>
#include <IRremote.h>
#include "Infra.h"

#include "SerialEvent.h"

#include <Wire.h>

void setup()
{

	Serial.begin(115200);

	setupSerialEvent();


	setupIR(2,14U,100);
	//Chip c = C16;
	//setupMemo(c);

	Wire.begin();

	//for training
	training = maxNchars-1;
}

void i2c_eeprom_write_byte(int deviceaddress, unsigned int eeaddress, byte data) {
	int rdata = data;
	Wire.beginTransmission(deviceaddress);
	Wire.write((int)(eeaddress >> 8)); // MSB
	Wire.write((int)(eeaddress & 0xFF)); // LSB
	Wire.write(rdata);
	Wire.endTransmission();
}
byte i2c_eeprom_read_byte(int deviceaddress, unsigned int eeaddress) {
	byte rdata = 0xFF;
	Wire.beginTransmission(deviceaddress);
	Wire.write((int)(eeaddress >> 8)); // MSB
	Wire.write((int)(eeaddress & 0xFF)); // LSB
	Wire.endTransmission();
	Wire.requestFrom(deviceaddress, 1);
	if (Wire.available()) rdata = Wire.read();
	return rdata;
}
void i2c_eeprom_write_page(int deviceaddress, unsigned int eeaddresspage, byte* data, byte length) {
	Wire.beginTransmission(deviceaddress);
	Wire.write((int)(eeaddresspage >> 8)); // MSB
	Wire.write((int)(eeaddresspage & 0xFF)); // LSB
	byte c;
	for (c = 0; c < length; c++)
		Wire.write(data[c]);
	Wire.endTransmission();
}

void loop()
{

	//writeCell(0, 0, 1);
	//readCell(0, 0);
	//byte data = byte(4);
	unsigned int addr = 515; //first address
//	 i2c_eeprom_write_byte(1, addr, data); // access the first address from the memory

	//int addr = 0; //first address
//	byte b = i2c_eeprom_read_byte(1, addr); // access the first address from the memory

	//Serial.println(data);
	//Serial.println(b);
	/*
	char somedata[] = "    Probando nuevamente q"; // data to write
	i2c_eeprom_write_page(0x50, addr, (byte *)somedata, sizeof(somedata)); // write to EEPROM 
	byte b = i2c_eeprom_read_byte(0x50, addr); // access the first address from the memory

	while (b != 0)
	{
		Serial.print((char)b); //print content to serial port
		addr++; //increase address
		b = i2c_eeprom_read_byte(0x50, addr); //access an address from the memory
	}
	Serial.println(" ");
	
	delay(10000);
	*/
	if (training >= 0)
	{
		testAlphabet(6000, 9U);
	}

#if defined (SEND38)

	//	testAlphabet38(2000);


	String msg = loopSerialEvent();

	if (msg.compareTo("") != 0)  sendIRMsg(msg.c_str(),11U,1U);

#endif

	String msg = loopSerialEvent();

	if (msg.compareTo("") != 0)  sendIRMsg(msg.c_str(), 9U, 1U);

	//byte b = byte(5);
	//delay(5000);
	//shiftOut(9, A5, MSBFIRST, b);

	//unsigned long pu = pulseIn(7, LOW);

	//Serial.println(pu);

	if (training <0) loopIR();

}




